<?php

namespace App\Modules\Admin\Controllers;

use App\Models\{model};
use App\Repositories\{model}Repository;
use App\Services\{model}Service;
use SuperFrameworkEngine\Foundation\Controller;
use SuperFrameworkEngine\App\UtilValidator\Validator;

{use_model_md}
{use_repository_md}

{select_repository}
{select_repository_md}

/**
* @route admin/{route_class}
*/
class Admin{class_name}Controller extends Controller
{
    public function __construct()
    {
        if(!admin_auth()->id()) return redirect(admin_url("auth/login"));
    }

    /**
     * @route /
     */
    public function index()
    {
        $data = [];
        $data['page_title'] = "Data {module}";
        $data['page_heading'] = "Data {module}";
        $data['result'] = {model}Repository::paginate(10, "id", "desc", function($query) {
            $query->whereIsset(request('search'),'{name_field} like ?',['%'.request('search').'%']);
            return $query;
        });
        return view("Admin::{view}.index",$data);
    }

    /**
     * @route add
     */
    public function add()
    {
        $data = [];
        $data['page_title'] = "Data {module}";
        $data['page_heading'] = "Add {module}";

        {select_query}

        return view("Admin::{view}.form", $data);
    }

    /**
     * @route edit/{id}
     * @param $id
     * @return string
     * @throws \Exception
     */
    public function edit($id)
    {
        $data = [];
        $data['page_title'] = "Data {module}";
        $data['page_heading'] = "Edit {module}";

        $data['row'] = {model}Repository::findById($id);

        {select_query}
        {select_query_md}

        {data_item}
        {data_item_list}

        return view("Admin::{view}.form", $data);
    }

    /**
    * @route save
    */
    public function save()
    {
        if(request_method_is_post()) {
           try {
               Validator::make(request(),{add_validate_rule});

               if(request('id')) {
                 $data = {model}::findById(request('id'));
               } else {
                 $data = new {model}();
               }

               {model_assign}
               $data->save();

               if(!request('id') && request('submit') == 'Add More') {
                   return redirect_back(['message'=>'Data has been saved!','type'=>'success']);
               }

               if(!request('id') && request('submit') == 'Save & Entry Items') {
                   return redirect(admin_url('{module_path}/edit/'.$data->id),['message'=>'Data has been saved, please entry the item','type'=>'success']);
               }

           } catch (\Exception $e) {
               logging($e);
               return redirect_back(['message'=>$e->getMessage(),'type'=>'warning']);
           }

           return redirect(admin_url('{module_path}'),['message'=>'Data has been saved!','type'=>'success']);
        }
    }

    {md_methods}

    /**
     * @route duplicate/{id}
     * @param $id
     */
    public function duplicate($id)
    {
        $data = {model}::findById($id);
        $data->{name_field} = preg_replace('/\(\d+\)$/','',$data->{name_field});
        $countData = {model}::query()->where("{name_field} like ?",[$data->{name_field}.'%'])->count() + 1;
        $data->id = null;
        $data->{name_field} = $data->{name_field} . " (" . $countData . ")";
        $data->save();

        return redirect_back(['message'=>'Data has been duplicated!','type'=>'success']);
    }

    /**
     * @route bulk
     */
    public function bulkAction()
    {
        if(request('bulk_action') && request('checkbox')) {
            switch (request('bulk_action')) {
                case "DELETE":
                    {model}::query()->whereIn("id",request("checkbox"))->delete();
                    return redirect_back(['message'=>count(request('checkbox')).' Records has been deleted!','type'=>'success']);
                    break;
            }
        }
        return redirect_back();
    }


    /**
     * @route delete/{id}
     * @param $id
     */
    public function delete($id)
    {
        {model}::delete($id);

        return redirect_back(['message'=>'The data has been deleted!','type'=>'success']);
    }
}